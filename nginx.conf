events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name *.server1.local;

        # Redirection HTTP vers HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name ollama.server1.local;

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;  # Remplacez par le chemin de votre certificat wildcard
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;  # Remplacez par le chemin de votre clé privée

        location / {
            # Configuration de votre proxy ou de votre application ici
            proxy_pass http://open-webui:8080;  # Exemple, à ajuster selon vos besoins
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Configuration des autres serveurs pour portainer, comfyui, notepad...
    server {
        listen 443 ssl;
        server_name portainer.server1.local;

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;  # Utilisez le même certificat wildcard
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;  # Utilisez la même clé privée

        location / {
            resolver 127.0.0.11;
            set $url2 https://portainer:9443;
            proxy_pass $url2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name comfyui.server1.local;

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;  # Utilisez le même certificat wildcard
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;  # Utilisez la même clé privée

        location / {
            resolver 127.0.0.11;
            set $url3 http://comfyui:6080;
            proxy_pass $url3;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /websockify {
            resolver 127.0.0.11;
            set $url4 http://comfyui:6080;
            proxy_pass $url4;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
    }

    server {
        listen 443 ssl;
        server_name notepad.server1.local;

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;  # Utilisez le même certificat wildcard
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;  # Utilisez la même clé privée

        location / {
            resolver 127.0.0.11;
            set $url5 http://notepad:80;
            proxy_pass $url5;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    server {
        listen 443 ssl;
        server_name langflow.server1.local;

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;  # Utilisez le même certificat wildcard
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;  # Utilisez la même clé privée

        location / {
            resolver 127.0.0.11;
            set $url5 http://langflow:7860;
            proxy_pass $url5;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 80 default_server;
        server_name _;
#        server_name *.server1.local;

        # Redirection HTTP vers HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl default_server;
        server_name _;

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;  # Utilisez le même certificat wildcard
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;  # Utilisez la même clé privée

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }
    }
}
